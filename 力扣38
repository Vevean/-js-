给定一个正整数 n ，输出外观数列的第 n 项。

「外观数列」是一个整数序列，从数字 1 开始，序列中的每一项都是对前一项的描述。

你可以将其视作是由递归公式定义的数字字符串序列：

countAndSay(1) = "1"
countAndSay(n) 是对 countAndSay(n-1) 的描述，然后转换成另一个数字字符串。
前五项如下：

1.     1
2.     11
3.     21
4.     1211
5.     111221
第一项是数字 1 
描述前一项，这个数是 1 即 “ 一 个 1 ”，记作 "11"
描述前一项，这个数是 11 即 “ 二 个 1 ” ，记作 "21"
描述前一项，这个数是 21 即 “ 一 个 2 + 一 个 1 ” ，记作 "1211"
描述前一项，这个数是 1211 即 “ 一 个 1 + 一 个 2 + 二 个 1 ” ，记作 "111221"
要 描述 一个数字字符串，首先要将字符串分割为 最小 数量的组，每个组都由连续的最多 相同字符 组成。然后对于每个组，先描述字符的数量，然后描述字符，形成一个描述组。要将描述转换为数字字符串，先将每组中的字符数量用数字替换，再将所有描述组连接起来。
<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <meta http-equiv="X-UA-Compatible" content="ie=edge">
    <title>力扣38</title>
</head>
<body>
    <script>
     var countAndSay = function(n){
         if(n===1) return '1';
         else{
             var str = countAndSay(n-1);//递归
             var temp = str[0];//给temp初始化，让temp为temp[0]
             var count = 0;//计数
             var ans = '';//保存字符
             for(var i = 0;i<str.length;i++){//遍历
                 if(str[i]===temp) count++;//一样计数
                 else{//不一样的话把之前的赋值到ans中，重新给temp,count赋值
                     ans += '' + count + temp;
                     temp = str[i];
                     count = 1;
                 }
                 if (i===str.length-1) ans += '' + count + temp;
             }
             return ans;

         }
     }

    </script>
</body>
</html>
